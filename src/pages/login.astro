---
import Layout from '../layouts/Layout.astro';
---

<Layout title="Password Protection">
  <meta name="referrer" content="strict-origin-when-cross-origin" />
  <main class="h-screen col-fcc">
    <body>
      <div class="container" id="input_container">
        <div class="form-container">
          <h2>登录</h2>
          <form id="login-form" action="login.php" method="post">
              <div class="form-group">
                  <input id="username" type="email" name="username" placeholder="邮箱：example@gmail.com">
              </div>
              <div class="form-group">
                  <input id="password" type="password" name="password" placeholder="密码：Password">
              </div>
              <button id="loginSubmitId" type="submit">登录</button>
          </form>
          <p>还没有账户吗? <a href="#" class="toggle-form">开始注册</a></p>
      </div>
      <div class="form-container hidden">
        <h2>注册</h2>
        <form id="register-form" action="login.php" method="post">
            <div class="form-group">
                <input id="registerEmail" type="email" name="email" placeholder="邮箱：example@gmail.com">
            </div>
            <div class="form-group">
                <input id="registerPassword" type="password" name="password" placeholder="密码：Password">
            </div>
            <button id="registerSubmitId" type="submit">注册</button>
        </form>
        <p>已经有账号吗? <a href="#" class="toggle-form">开始登录</a></p>
    </div>
      </div>
    </body>
  </main>
</Layout>

<script>
// 登录方法
const loginForm = document.getElementById('login-form')
loginForm.addEventListener('submit', (event) => {
  event.preventDefault() // 阻止表单默认提交行为
  const username = document.getElementById('username').value
  const password = document.getElementById('password').value
  // const data = { username, password } // 创建一个包含账号密码的对象
  // const jsonData = JSON.stringify(data) // 将对象转换成json格式的字符串
  // console.log(jsonData) // 输出json格式的字符串
  // 在这里可以将jsonData发送到服务器进行验证
  checkCurrentAuth(username, password)
  async function checkCurrentAuth(username, password) {
    const response = await fetch('/api/login', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        username,
        password,
      }),
    })
    const responseJson = await response.json()
    console.log(responseJson)
    // 登录失败-跳转登录
    if (responseJson.code.toString().endsWith('0000')) {
      console.log('登录成功')
      localStorage.setItem('token', responseJson.data)
      window.alert('登录成功')
      window.location.href = '/'
    } else {
      console.log('登录失败')
      window.alert('账号或密码错误')
    }
  }
})

// 注册方法
const registerForm = document.getElementById('register-form')
registerForm.addEventListener('submit', (event) => {
  event.preventDefault() // 阻止表单默认提交行为
  const username = document.getElementById('registerEmail').value
  const password = document.getElementById('registerPassword').value
  register(username, password)
  async function register(username, password) {
    const response = await fetch('/api/register', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        username,
        password,
      }),
    })
    const responseJson = await response.json()
    console.log(responseJson)
    // 注册失败-跳转登录
    if (responseJson.code.toString().endsWith('0000')) {
      console.log('注册成功')
      window.alert('注册成功,请登录')
      window.location.href = '/login'
    } else {
      console.log('注册失败')
      window.alert('注册失败')
    }
  }
})

// 页面切换
const toggleForms = document.querySelectorAll('.toggle-form')
toggleForms.forEach((toggleForm) => {
  toggleForm.addEventListener('click', () => {
    const loginForm = document.querySelector('.form-container:nth-of-type(1)')
    const registerForm = document.querySelector('.form-container:nth-of-type(2)')
    loginForm.classList.toggle('hidden')
    registerForm.classList.toggle('hidden')
  })
})

// checkCurrentAuth()

function checkCurrentAuth(username: any, password: any) {
  throw new Error('Function not implemented.')
}
</script>

<style>
  * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
  }

  body {
      background-color: #f5f5f5;
      font-family: Arial, sans-serif;
      font-size: 16px;
  }

  .container {
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100vh;
  }

  .form-container {
      background-color: #fff;
      border-radius: 5px;
      box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
      padding: 20px;
      margin: 0 10px;
      width: 400px;
      text-align: center;
  }

  .form-container h2 {
      font-size: 24px;
      margin-bottom: 20px;
  }

  .form-group {
      margin-bottom: 20px;
  }

  input[type="text"],
  input[type="email"],
  input[type="password"] {
      width: 100%;
      padding: 10px;
      border-radius: 5px;
      border: none;
      box-shadow: 0 0 5px rgba(0, 0, 0, 0.1);
      font-size: 16px;
  }

  button[type="submit"] {
      background-color: #3498db;
      color: #fff;
      border: none;
      border-radius: 5px;
      padding: 10px 20px;
      font-size: 16px;
      cursor: pointer;
      transition: background-color 0.3s ease;
  }

  button[type="submit"]:hover {
      background-color: #2980b9;
  }

  p {
      margin-top: 20px;
  }

  a {
      color: #3498db;
      text-decoration: none;
  }

  a:hover {
      text-decoration: underline;
  }

  .hidden {
      display: none;
  }
</style>
